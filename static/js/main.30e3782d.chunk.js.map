{"version":3,"sources":["serviceWorker.js","Home.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Home","className","style","src","alt","width","height","backgroundColor","color","marginTop","href","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2NAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCuDSC,MAvEf,WACE,OACE,6BACEC,UAAU,qBACVC,MACE,IAKF,yBAAKD,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,oCACb,yBACEE,IAAI,WACJC,IAAI,OACJF,MAAO,CACLG,MAAO,MACPC,OAAQ,SAIZ,wBAAIL,UAAU,iBAAd,iEACA,6BACA,yBAAKA,UAAU,wCAAf,wJAEE,6BAFF,yKAMA,6BACA,yBAAKA,UAAU,8BAAf,kGAEE,6BAFF,6KAmBA,6BACA,uBACEA,UAAU,kBACVC,MAAO,CACLK,gBAAiB,oBACjBC,MAAO,QACPC,UAAW,QAEbC,KAAK,sBAPP,4B,KC9CdC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,SF2H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.30e3782d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <section\r\n      className=\"hero is-fullheight\"\r\n      style={\r\n        {\r\n          /*backgroundColor: \"rgb(235, 161, 42)\"*/\r\n        }\r\n      }\r\n    >\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <div className=\"columns is-centered is-vcentered\">\r\n            <div className=\"column is-half has-text-centered\">\r\n              <img\r\n                src=\"logo.png\"\r\n                alt=\"logo\"\r\n                style={{\r\n                  width: \"25%\",\r\n                  height: \"25%\"\r\n                  /*filter: \"brightness(0) invert(1)\"*/\r\n                }}\r\n              />\r\n              <h2 className=\"subtitle is-4\">2020년 봄학기 SPARCS 리크루팅</h2>\r\n              <br />\r\n              <div className=\"notification is-danger has-text-left\">\r\n                COVID-19 확산 상황에 따라 리크루팅 일정이 변동될 수 있습니다.\r\n                <br />\r\n                변동 시 SPARCS 공식 홈페이지 및 페이스북을 통해\r\n                알려드리겠습니다.\r\n              </div>\r\n              <hr />\r\n              <div className=\"notification has-text-left\">\r\n                지금은 지원서 접수 기간이 아닙니다.\r\n                <br />\r\n                2020년 3월 9일(월) 0시 ~ 3월 20일(금) 23시 59분까지 지원서 작성이 가능합니다.\r\n              </div>\r\n              {/*\r\n              <button\r\n                className=\"button is-light\"\r\n                disabled={true}\r\n                style={{\r\n                  backgroundColor: \"rgb(235, 161, 42)\",\r\n                  color: \"black\",\r\n                  marginTop: \"3rem\",\r\n                  fontSize: \"1.25rem\",\r\n                }}\r\n              >\r\n                지금은 리크루팅 기간이 아닙니다.\r\n              </button>\r\n              */}\r\n              <br />\r\n              <a\r\n                className=\"button is-light\"\r\n                style={{\r\n                  backgroundColor: \"rgb(235, 161, 42)\",\r\n                  color: \"white\",\r\n                  marginTop: \"1rem\"\r\n                }}\r\n                href=\"https://sparcs.org\"\r\n              >\r\n                Back to SPARCS.org\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Home from './Home';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(<Home />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}